// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model users{
  id String @id @default(uuid())
  email String @unique
  password String
  role String
}
model Organisateurs{
  id String @id @default(uuid())
  nom String @db.VarChar(191)
  prenom String @db.VarChar(191)
  email String @unique  @db.VarChar(191)
  password String
  numTel Int @unique
  numCin Int @unique
  ville String
  adress String
  pdProfile String @default("https://th.bing.com/th/id/OIP.lvzPu-WOW4Iv7QyjP-IkrgHaHa?rs=1&pid=ImgDetMain")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Evennements Evennements[]
}
model Admins{
  id String @id @default(uuid())
  nom String
  prenom String
  email String @unique  @db.VarChar(191)
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Prestataires{
  id String @id @default(uuid())
  nom String
  prenom String
  email String @unique  @db.VarChar(191)
  password String
  travail String
  description String @db.Text
  numTel Int @unique
  numCin Int @unique
  ville String
  adress String
  pdProfile String @default("https://th.bing.com/th/id/OIP.lvzPu-WOW4Iv7QyjP-IkrgHaHa?rs=1&pid=ImgDetMain")
  fichierConfirmation String[]
  approoved Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Services Services[]
}
model Services{
  id String @id @default(uuid())
  nom String 
  description String @db.Text
  prix Float
  promo Int
  photoCouverture String 
  Photos String[]
  Prestataire Prestataires @relation(fields: [Prestataireid], references: [id])
  Prestataireid String
  approoved Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Evennements{
  id String @id @default(uuid())
  nom String 
  date DateTime
  lieu String
  budgetTotale Float
  organisateur Organisateurs @relation(fields: [organisateurid], references: [id])
  organisateurid String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
